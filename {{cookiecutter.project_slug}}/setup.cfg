[metadata]
name = {{ cookiecutter.pypi_name }}
description = Postgres-based distributed task processing library
author = PeopleDoc
author_email = {{ cookiecutter.author_email }}
url = {{ cookiecutter.github_url }}
project_urls =
    GitHub = {{ cookiecutter.github_url }}
    Documentation = {{ cookiecutter.readthedocs_url }}
    Changelog = {{ cookiecutter.readthedocs_changelog_url }}
    Issue tracker = {{ cookiecutter.github_url }}/issues
long_description = file: README.rst
keywords = {{ cookiecutter.package_keywords }}
license = MIT License
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python :: 3
    {%- for version in cookiecutter.python_versions.split(",")|sort %}
    Programming Language :: Python :: {{ version.strip() }}
    {% endfor -%}
    License :: OSI Approved :: MIT License

[options]
zip_safe = True
include_package_data = True
packages = find:
setup_requires =
  setuptools_scm
install_requires =
    # Backport from Python 3.8
    importlib-metadata

[options.extras_require]
dev =
    tox
    black
    isort

test =
    pytest
    pytest-mock
    pytest-cov
    pytest-click

lint =
    black
    flake8
    isort
    mypy
    check-manifest

docs =
    doc8
    sphinx>=3.1.1
    sphinx_autodoc_typehints
    sphinxcontrib-programoutput

docs_spelling =
    sphinxcontrib-spelling

[options.packages.find]
include =
    {{ cookiecutter.package_name }}
    {{ cookiecutter.package_name }}.*

[options.entry_points]
console_scripts =
    {{ cookiecutter.cli_name }} = {{ cookiecutter.package_name }}.cli:main

[isort]
profile = black

[flake8]
# This section ensures black and flake8 play nice together
max-line-length = 88
# E203: whitespace before colon on list slice: mylist[1 : 2]
extend-ignore = E203

[doc8]
max-line-length=88
ignore-path=docs/_build

[tool:pytest]
addopts =
    --cov-report term-missing --cov-branch --cov-report html --cov-report term
    --cov={{ cookiecutter.package_name }} -vv --strict-markers -rfE
testpaths =
    tests/unit
    tests/integration
    tests/acceptance

[mypy]
no_implicit_optional = True

# Add deps that mypy don't recognize here.
[dep1.*,dep2.*]
ignore_missing_imports = True

[coverage:report]
exclude_lines =
    raise NotImplementedError
    coverage: exclude
    if TYPE_CHECKING:
    [ ]+\.\.\.$
